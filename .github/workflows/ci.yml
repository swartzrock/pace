# Tests the pushed commit(s). If the package.json version changes, builds and creates a new github release with the artifacts

name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: CreateReleaseForNewPaceVersion
      uses: justincy/github-action-npm-release@2.0.2
      id: createrelease
    - name: SetupNode
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'
    - name: SetupYarn
      run: yarn install --frozen-lockfile
    - name: Test
      run: yarn jest
    - name: Build
      run: |
        yarn pkg
        cd dist
        tar cvfj pace-${{ steps.createrelease.outputs.release_tag }}-linux-arm64.tar.gz pace-linux-arm64
        tar cvfj pace-${{ steps.createrelease.outputs.release_tag }}-linux-amd64.tar.gz pace-linux-x64
        tar cvfj pace-${{ steps.createrelease.outputs.release_tag }}-darwin-amd64.tar.gz pace-macos-x64
        tar cvfj pace-${{ steps.createrelease.outputs.release_tag }}-win-x64.exe.tar.gz pace-win-x64.exe
    - name: AddReleaseArtifacts
      uses: softprops/action-gh-release@v0.1.14
      if: ${{ steps.createrelease.outputs.released == 'true' }}
      with:
        tag_name: ${{ steps.createrelease.outputs.release_tag }}
        body: Pace Release
        generate_release_notes: true
        fail_on_unmatched_files: true
        files: |
          dist/pace-${{ steps.createrelease.outputs.release_tag }}-linux-arm64.tar.gz
          dist/pace-${{ steps.createrelease.outputs.release_tag }}-linux-amd64.tar.gz
          dist/pace-${{ steps.createrelease.outputs.release_tag }}-darwin-amd64.tar.gz
          dist/pace-${{ steps.createrelease.outputs.release_tag }}-win-x64.exe.tar.gz
    - name: UpdateHomebrewTap
      uses: Justintime50/homebrew-releaser@v1
      if: ${{ steps.createrelease.outputs.released == 'true' }}
      with:
        homebrew_owner: swartzrock
        homebrew_tap: homebrew-tap
        formula_folder: Formula
        github_token: ${{ secrets.GITHUB_TOKEN }}
        commit_owner: swartzrock
        commit_email: dev@bks2.com

        install: 'bin.install "pace-macos-x64" => "pace"'

        # Adds URL and checksum targets for different OS and architecture pairs. Using this option assumes
        # a tar archive exists on your GitHub repo with the following URL pattern (this cannot be customized):
        # https://github.com/{GITHUB_OWNER}/{REPO_NAME}/releases/download/{TAG}/{REPO_NAME}-{VERSION}-{OPERATING_SYSTEM}-{ARCHITECTURE}.tar.gz'
        # https://github.com/swartzrock/pace/releases/download/0.1.6/pace-linux-arm64.tar.gz

        # Darwin AMD pre-existing path example: https://github.com/justintime50/myrepo/releases/download/v1.2.0/myrepo-1.2.0-darwin-amd64.tar.gz
        # Linux ARM pre-existing path example: https://github.com/justintime50/myrepo/releases/download/v1.2.0/myrepo-1.2.0-linux-arm64.tar.gz
        # Optional - booleans.
        target_darwin_amd64: true
        target_darwin_arm64: false
        target_linux_amd64: true
        target_linux_arm64: true

        # debug mode
        skip_commit: true
        debug: true
